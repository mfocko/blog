"use strict";(self.webpackChunkfi=self.webpackChunkfi||[]).push([[3276],{9538:e=>{e.exports=JSON.parse('{"pluginId":"algorithms","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"autogeneratedBar":[{"type":"link","label":"Introduction","href":"/algorithms/","docId":"algorithms-intro","unlisted":false},{"type":"category","label":"Algorithms and Correctness","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Vague postconditions and proving correctness of algorithms","href":"/algorithms/algorithms-correctness/postcondition-ambiguity","docId":"algorithms-correctness/postcondition-ambiguity","unlisted":false}],"href":"/algorithms/category/algorithms-and-correctness"},{"type":"category","label":"Asymptotic Notation and Time Complexity","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Time complexity of \u2039extend\u203a","href":"/algorithms/time-complexity/extend","docId":"time-complexity/extend","unlisted":false}],"href":"/algorithms/category/asymptotic-notation-and-time-complexity"},{"type":"category","label":"Recursion","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Recursion and backtracking with Robot Karel","href":"/algorithms/recursion/karel-1","docId":"recursion/karel-1","unlisted":false},{"type":"link","label":"Introduction to dynamic programming","href":"/algorithms/recursion/pyramid-slide-down","docId":"recursion/pyramid-slide-down","unlisted":false}],"href":"/algorithms/category/recursion"},{"type":"category","label":"Red-Black Trees","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Pou\u017eit\xed \u010derveno-\u010dern\xfdch strom\u016f","href":"/algorithms/rb-trees/applications","docId":"rb-trees/applications","unlisted":false},{"type":"link","label":"On the rules of the red-black tree","href":"/algorithms/rb-trees/rules","docId":"rb-trees/rules","unlisted":false}],"href":"/algorithms/category/red-black-trees"},{"type":"category","label":"Graphs","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Iterative algorithms via iterators","href":"/algorithms/graphs/iterative-and-iterators","docId":"graphs/iterative-and-iterators","unlisted":false},{"type":"link","label":"Distance boundaries from BFS tree on undirected graphs","href":"/algorithms/graphs/bfs-tree","docId":"graphs/bfs-tree","unlisted":false}],"href":"/algorithms/category/graphs"}]},"docs":{"algorithms-correctness/postcondition-ambiguity":{"id":"algorithms-correctness/postcondition-ambiguity","title":"Vague postconditions and proving correctness of algorithms","description":"Debugging and testing with precise postconditions.\\n","sidebar":"autogeneratedBar"},"algorithms-intro":{"id":"algorithms-intro","title":"Introduction","description":"In this part you can find \u201crandom\u201d additional materials I have written over the","sidebar":"autogeneratedBar"},"graphs/bfs-tree":{"id":"graphs/bfs-tree","title":"Distance boundaries from BFS tree on undirected graphs","description":"Short explanation of distance boundaries deduced from a BFS tree.\\n","sidebar":"autogeneratedBar"},"graphs/iterative-and-iterators":{"id":"graphs/iterative-and-iterators","title":"Iterative algorithms via iterators","description":"Iterative DFS using iterators.\\n","sidebar":"autogeneratedBar"},"rb-trees/applications":{"id":"rb-trees/applications","title":"Pou\u017eit\xed \u010derveno-\u010dern\xfdch strom\u016f","description":"Uk\xe1zka pou\u017eit\xed \u010derveno-\u010dern\xfdch strom\u016f v standardn\xedch kni\u017enic\xedch zn\xe1m\xfdch jazyk\u016f.\\n","sidebar":"autogeneratedBar"},"rb-trees/rules":{"id":"rb-trees/rules","title":"On the rules of the red-black tree","description":"Shower thoughts on the rules of the red-black tree.\\n","sidebar":"autogeneratedBar"},"recursion/karel-1":{"id":"recursion/karel-1","title":"Recursion and backtracking with Robot Karel","description":"A problem with too many restrictions.\\n","sidebar":"autogeneratedBar"},"recursion/pyramid-slide-down":{"id":"recursion/pyramid-slide-down","title":"Introduction to dynamic programming","description":"Solving a problem in different ways.\\n","sidebar":"autogeneratedBar"},"time-complexity/extend":{"id":"time-complexity/extend","title":"Time complexity of \u2039extend\u203a","description":"How to make inefficient algorithm unknowingly.\\n","sidebar":"autogeneratedBar"}}}')}}]);