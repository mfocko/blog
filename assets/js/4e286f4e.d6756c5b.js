"use strict";(self.webpackChunkfi=self.webpackChunkfi||[]).push([[1501],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=s(n),d=r,h=m["".concat(p,".").concat(d)]||m[d]||c[d]||o;return n?a.createElement(h,i(i({ref:t},u),{},{components:n})):a.createElement(h,i({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[m]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6038:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const o={id:"karel-1",title:"Recursion and backtracking with Robot Karel",description:"A problem with too many restrictions.\n",tags:["python","karel","recursion","backtracking"],last_update:{date:new Date("2022-11-29T00:00:00.000Z")}},i=void 0,l={unversionedId:"recursion/karel-1",id:"recursion/karel-1",title:"Recursion and backtracking with Robot Karel",description:"A problem with too many restrictions.\n",source:"@site/ib002/04-recursion/2022-11-29-karel-1.md",sourceDirName:"04-recursion",slug:"/recursion/karel-1",permalink:"/ib002/recursion/karel-1",draft:!1,editUrl:"https://github.com/mfocko/blog/tree/main/ib002/04-recursion/2022-11-29-karel-1.md",tags:[{label:"python",permalink:"/ib002/tags/python"},{label:"karel",permalink:"/ib002/tags/karel"},{label:"recursion",permalink:"/ib002/tags/recursion"},{label:"backtracking",permalink:"/ib002/tags/backtracking"}],version:"current",lastUpdatedAt:166968e4,formattedLastUpdatedAt:"Nov 29, 2022",frontMatter:{id:"karel-1",title:"Recursion and backtracking with Robot Karel",description:"A problem with too many restrictions.\n",tags:["python","karel","recursion","backtracking"],last_update:{date:"2022-11-29T00:00:00.000Z"}},sidebar:"autogeneratedBar",previous:{title:"Recursion",permalink:"/ib002/category/recursion"},next:{title:"Introduction to dynamic programming",permalink:"/ib002/recursion/pyramid-slide-down"}},p={},s=[{value:"Introduction",id:"introduction",level:2},{value:"Your environment and problem description",id:"your-environment-and-problem-description",level:2},{value:"Environment",id:"environment",level:3},{value:"Interface",id:"interface",level:3},{value:"Problem",id:"problem",level:3},{value:"Simple problem to get familiar with the robot",id:"simple-problem-to-get-familiar-with-the-robot",level:2},{value:"Brainstorm the idea",id:"brainstorm-the-idea",level:2},{value:"\xbbRough\xab pseudocode",id:"rough-pseudocode",level:2},{value:"\xbbProper\xab pseudocode",id:"proper-pseudocode",level:2},{value:"Library",id:"library",level:2},{value:"Solution",id:"solution",level:2}],u={toc:s},m="wrapper";function c(e){let{components:t,...o}=e;return(0,r.kt)(m,(0,a.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"pathname:///files/ib002/recursion/karel-1.tar.gz"},"Sources"))),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"In this exercise we will be working with a Robot Karel and with a \xbbvery\xab limited\nresources. The point of this exercise is to show how powerful recursion and\nbacktracking can be even without anything else at your hand."),(0,r.kt)("h2",{id:"your-environment-and-problem-description"},"Your environment and problem description"),(0,r.kt)("h3",{id:"environment"},"Environment"),(0,r.kt)("p",null,"You are given a robot that is present in a maze and is looking for an exit. Maze\nconsists of different walls and exit is marked with a single so-called \u201cbeeper\u201d."),(0,r.kt)("p",null,"Walking into a wall results in a permanent damage of the robot."),(0,r.kt)("h3",{id:"interface"},"Interface"),(0,r.kt)("p",null,"You can control the robot using the following interface:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"actions \u200b\xad\u2014 you can use them to change the current state of the robot and its\nsurroundings",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"robot.step()")," \u2014 moves robot one step further"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"robot.turn_left()")," \u2014 turns robot 90-degrees counter-clockwise",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"notice that you are not given ",(0,r.kt)("inlineCode",{parentName:"li"},"turn_right")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"turn_around"),", but feel free\nto implement them yourself"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"robot.pick_beeper()")," and opposite operation ",(0,r.kt)("inlineCode",{parentName:"li"},"robot.put_beeper()")," \u2014 that\nallows you to either pick or put \u201cbeeper\u201d from or onto the current position"))),(0,r.kt)("li",{parentName:"ul"},"queries \u2014 you can use them to check the current state of the robot and its\nsurroundings",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"robot.beepers_present()")," \u2014 to check if there are any beepers at the robot's\ncurrent location"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"robot.left_is_clear()")," \u2014 to check if you can step to the left",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"analogically for ",(0,r.kt)("inlineCode",{parentName:"li"},"front")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"right"))))))),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Helper functions / procedures are allowed. Return values are allowed."),(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("strong",{parentName:"p"},"Variables are prohibited!"))),(0,r.kt)("h3",{id:"problem"},"Problem"),(0,r.kt)("p",null,"Your task is to decide whether there is an exit from the maze or not. You can see\nan example of a maze here:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Image of the maze",src:n(9857).Z,width:"770",height:"839"})),(0,r.kt)("h2",{id:"simple-problem-to-get-familiar-with-the-robot"},"Simple problem to get familiar with the robot"),(0,r.kt)("p",null,"If you feel completely lost after the previous description, let me start you off\nwith a simpler problem."),(0,r.kt)("p",null,"You are standing in front of the stairs, your task is to walk up the stairs."),(0,r.kt)("p",null,"You can see an example of such map here:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Image of the stairs",src:n(8617).Z,width:"1058",height:"1161"})),(0,r.kt)("h2",{id:"brainstorm-the-idea"},"Brainstorm the idea"),(0,r.kt)("p",null,"As a first step write down any ideas and things that you have noticed or came to\nyour mind. Ideally:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Write down a nested list of the problems, e.g."),(0,r.kt)("admonition",{parentName:"li",title:"Example ",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Problem: I want to find out whether the display on smartphone should rotate."),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Check if display has been rotated",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Read data from some sensor",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"From what sensor"))),(0,r.kt)("li",{parentName:"ul"},"In what format are the data I have read?"),(0,r.kt)("li",{parentName:"ul"},"How do I communicate with the sensor?"),(0,r.kt)("li",{parentName:"ul"},"What is the meaning of the data that I got?"),(0,r.kt)("li",{parentName:"ul"},"How can I process it?")))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Write down list of problems that can happen, e.g."),(0,r.kt)("admonition",{parentName:"li",title:"Example continued",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Following the same problem."),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"What if the sensor doesn't work?"),(0,r.kt)("li",{parentName:"ul"},"What if the data doesn't conform to the specification?"),(0,r.kt)("li",{parentName:"ul"},"What if my formulas are wrong?")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Write down ",(0,r.kt)("strong",{parentName:"p"},"anything")," you consider important to solving the problem, e.g."),(0,r.kt)("admonition",{parentName:"li",title:"Example continued once again",type:"info"},(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"I could probably use gyroscope."),(0,r.kt)("li",{parentName:"ul"},"I should probably look up the datasheet for that module."),(0,r.kt)("li",{parentName:"ul"},"I could write some tests to verify that my computations are correct."))))),(0,r.kt)("h2",{id:"rough-pseudocode"},"\xbbRough\xab pseudocode"),(0,r.kt)("p",null,"As a next step write a ",(0,r.kt)("strong",{parentName:"p"},"mock up")," of a pseudocode solving the problem, you are\nallowed to use comments as placeholders for bigger chunks of code."),(0,r.kt)("p",null,"Those comments are also a very good hints for decomposition and short, but\ndescriptive, commnets (if they are short enough and you decide not to factor them\nout to separate functions)."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"The smaller the function is, the easier it is to test it and argue about its\ncorrectness.")),(0,r.kt)("h2",{id:"proper-pseudocode"},"\xbbProper\xab pseudocode"),(0,r.kt)("p",null,"If you are satisfied with the ",(0,r.kt)("em",{parentName:"p"},"\xbbrough\xab pseudocode"),", it's time to convert it into\na proper one. Get rid of the uncertain pieces of functionality and replace them\nwith proper pseudocode, i.e. list of the things that should happen in its place."),(0,r.kt)("h2",{id:"library"},"Library"),(0,r.kt)("p",null,"If you got here, and you ",(0,r.kt)("strong",{parentName:"p"},"actually")," wrote down the pseudocode, you can try your\nsolution after downloading the sources linked at the beginning. If you download\nthe ZIP-file, you can there:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"generate_mazes.py")," - that was used to generate the same maze with beepers in\ndifferent locations")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"karel_tk.py")," - library which can run Karel given the his world"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"documentation can be found ",(0,r.kt)("a",{parentName:"li",href:"https://www.fi.muni.cz/~xfocko/ib111/10/docs/"},"here")),(0,r.kt)("li",{parentName:"ul"},"also requires Tk Python library to be installed (it should be included in\nmajority of Python installations)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"*.kw")," - which represent multiple worlds for Karel I have prepared")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"skeleton.py")," - skeleton for your solution, needs to be put in the same directory\nas ",(0,r.kt)("inlineCode",{parentName:"p"},"karel_tk.py")," and takes path to the world as a first argument, example usage:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"$ python3 skeleton.py stairs.kw\n")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"of course, this file can be renamed ;)")))),(0,r.kt)("h2",{id:"solution"},"Solution"),(0,r.kt)("p",null,"Solution to this problem will be released as a second part, so that you can try\nit out by yourself without any influence of \u201cexample solution\u201d."),(0,r.kt)("p",null,"If you want to get any feedback, feel free to mail me your solution (including\nall the steps that lead to your final solution, if you wish to get feedback on\nthose too)."))}c.isMDXComponent=!0},9857:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/maze-a374d908bc9445061e15faeddc71641e.png"},8617:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/stairs-5ee5d03905645aeb13eeaa7774451a64.png"}}]);